import socket
import argparse
import json

def main():
    parser = argparse.ArgumentParser(
        prog = 'eCTF Packet Capturer',
        description = 'Captures Packets Coming from the Satelite',
    )

    parser.add_argument('--host', help = 'Satelite Hostname', default = '34.235.112.89')
    parser.add_argument('--port', help = 'Satelite Port', type = int, required = True)
    parser.add_argument('--out-packets', help = 'File to Save Packets In', required = True)
    parser.add_argument('--in-packets', help = 'File to Load Initial Packets From')

    args = parser.parse_args()

    packet_list = []
    if args.in_packets is not None:
        with open(args.in_packets, 'r') as f:
            packet_list = json.loads(f.read())

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((args.host, args.port))

        line = b''

        try:
            while True:
                while b'\n' not in line:
                    line += s.recv(4096)

                index = line.find(b'\n')

                current_line = line[:index].decode('ascii').strip()
                line = line[index + 1:]

                packet_data = json.loads(current_line)
                print(packet_data)
                packet_list.append(packet_data)
        except BaseException as e:
            print(e)
            # exit program, save data to file
            with open(args.out_packets, 'w') as f:
                print(json.dumps(packet_list))
                f.write(json.dumps(packet_list))

        

if __name__ == '__main__':
    main()
